server:
  port: 8094

spring:
  application:
    name: sonic-server-simple
    des: "Sonic云真机测试平台 - 单机版"
  servlet:
    multipart:
      maxFileSize: -1
      maxRequestSize: -1
  quartz:
    properties:
      org:
        quartz:
          scheduler:
            instanceName: SonicQuartz
            instanceId: AUTO
          jobStore:
            isClustered: true
    job-store-type: jdbc
    jdbc:
      initialize-schema: never
  datasource:
    initialization-mode: always
    schema:
      - classpath:data.sql
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${MYSQL_HOST}:${MYSQL_PORT}/${MYSQL_DATABASE:sonic}?useUnicode=true&characterEncoding=utf8&serverTimezone=UTC&autoReconnect=true&serverTimezone=GMT%2b8
    username: ${MYSQL_USERNAME:root}
    password: ${MYSQL_PASSWORD:Sonic!@#123}
  ldap:
    base: ${LDAP_BASE:ou=system}
    username: ${LDAP_USERNAME:uid=admin,ou=system}
    password: ${LDAP_PASSWORD:Sonic!@#123}
    urls: ${LDAP_URL:ldap://127.0.0.1:10389}

mybatis-plus:
  mapper-locations: classpath:mapping/*.xml, classpath*:com/gitee/sunchenbin/mybatis/actable/mapping/*/*.xml
  global-config:
    banner: false
  configuration:
    cache-enabled: false
    localCacheScope: STATEMENT
actable:
  model:
    pack: org.cloud.sonic.simple.models.domain
  table:
    auto: update
  database:
    type: mysql

gateway:
  host: http://${SONIC_API_HOST:localhost}:${SONIC_API_PORT:8094}
  secret: ${SECRET_KEY:sonic}
  expireDay: ${EXPIRE_DAY:14}

sonic:
  netty:
    port: ${SONIC_NETTY_PORT:8095}
  jobs:
    fileCron: ${FILE_CRON:0 0 12 * * ?}
    resultCron: ${RESULT_CRON:0 0 12 * * ?}
    dayReportCron: ${DAY_CRON:0 0 10 * * ?}
    weekReportCron: ${WEEK_CRON:0 0 10 ? * Mon}
    filesKeepDay: ${FILE_KEEP_DAY:60}
    resultsKeepDay: ${RESULT_KEEP_DAY:60}
  user:
    register:
      enable: ${REGISTER_ENABLE:true}
    normal:
      enable: ${NORMAL_ENABLE:true}
    ldap:
      enable: ${LDAP_ENABLE:false}
      userId: ${LDAP_USER_ID:cn}
      userBaseDN: ${LDAP_BASE_DN:ou=users}

robot:
  client:
    host: ${CLIENT_HOST:http://localhost:3000}
  img:
    success: "https://gitee.com/sonic-cloud/sonic-cloud/raw/master/src/assets/suc.png"
    warning: "https://gitee.com/sonic-cloud/sonic-cloud/raw/master/src/assets/warn.png"
    error: "https://gitee.com/sonic-cloud/sonic-cloud/raw/master/src/assets/fail.png"

knife4j:
  enable: true
  setting:
    enableHost: true
    enableHostText: http://${SONIC_API_HOST:localhost}:${SONIC_API_PORT:8094}
    enableFooter: false
    enableFooterCustom: true
    footerCustomContent: MIT License | Copyright 2021 - [SonicCloudOrg/sonic-server](https://github.com/SonicCloudOrg/sonic-server/blob/main/LICENSE)

logging:
  file:
    name: logs/${spring.application.name}.log
  logback:
    rollingpolicy:
      clean-history-on-start: true
      max-history: 3

